name: Docker Build & Push

on:
  push:
    branches: [ main, master ]
    paths-ignore:
      - 'README.md'
      - '.github/**'
      - 'docs/**'

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.bump_version.outputs.new_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Bump version
        id: bump_version
        run: |
          # Получаем текущую версию из файла version.txt (создайте его, если его нет)
          if [ -f version.txt ]; then
            CURRENT_VERSION=$(cat version.txt)
          else
            CURRENT_VERSION="0.0.0"
          fi
          
          # Разделяем версию на компоненты
          IFS='.' read -r -a version_parts <<< "$CURRENT_VERSION"
          
          # Увеличиваем патч-версию
          PATCH=$((version_parts[2] + 1))
          NEW_VERSION="${version_parts[0]}.${version_parts[1]}.$PATCH"
          
          # Записываем новую версию в файл
          echo "$NEW_VERSION" > version.txt
          
          # Сохраняем новую версию для дальнейших шагов
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          
          # Настраиваем git для коммита
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          
          # Коммитим новую версию
          git add version.txt
          git commit -m "Bump version to $NEW_VERSION [skip ci]"
          git push

  build:
    needs: version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Get new version
        run: echo "Working with version ${{ needs.version.outputs.new_version }}"
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            yourusername/marzban:latest
            yourusername/marzban:${{ needs.version.outputs.new_version }}
          build-args: |
            VERSION=${{ needs.version.outputs.new_version }}